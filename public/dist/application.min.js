"use strict";var ApplicationConfiguration=function(){var applicationModuleName="booking",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","daterangepicker","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("offerings"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("bookings-view",{url:"/",templateUrl:"modules/core/views/bookings-view.client.view.html"}).state("bookings-view.gas",{url:"/gas",templateUrl:"/modules/core/views/bookings-partial-gas.html"}).state("bookings-view.wash",{url:"/wash",templateUrl:"/modules/core/views/bookings-partial-wash.html"}).state("bookings-view.freshener",{url:"/freshener",templateUrl:"/modules/core/views/bookings-partial-freshener.html"})}]),angular.module("core").controller("BookingsViewController",["$scope","$state","OfferingsService",function($scope,$state,OfferingsService){$scope.cart={},$scope.offerings=OfferingsService.updateOfferings(),$scope.datefilter={startDate:new Date,endDate:new Date((new Date).getTime()+2592e6)},$scope.go=function(route){$state.go(route)},$scope.active=function(route){return $state.is(route)},$scope.tabs=[{heading:"Gas",route:"bookings-view.gas",active:!1},{heading:"Wash",route:"bookings-view.wash",active:!1},{heading:"Freshener",route:"bookings-view.freshener",active:!1}],$scope.$on("$stateChangeSuccess",function(){$scope.tabs.forEach(function(tab){tab.active=$scope.active(tab.route)})})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").directive("booking",[function(){return{templateUrl:"/modules/core/directives/booking.html",restrict:"E",scope:{offering:"=",cart:"=",offeringId:"@"},link:function(scope){scope.onAddToCart=function(id){scope.cart.hasOwnProperty(id)||(scope.cart[id]=0),++scope.cart[id]},scope.onRemoveFromCart=function(id){scope.cart.hasOwnProperty(id)&&(--scope.cart[id],0==scope.cart[id]&&delete scope.cart[id])},scope.isInCart=function(id){return scope.cart.hasOwnProperty(id)?scope.cart[id]>0:!1}}}}]),angular.module("core").directive("cart",["OfferingsService",function(OfferingsService){return{templateUrl:"/modules/core/directives/cart.html",restrict:"E",scope:{cart:"="},link:function(scope){scope.offerings=OfferingsService.getOfferings(),scope.sum=function(cart){var result=0;for(var id in cart)result+=scope.offerings[id].price*cart[id];return result},scope.isEmpty=function(cart){for(var id in cart)return!1;return!0},scope.onCheckout=function(){window.location="https://www.youtube.com/watch?v=dQw4w9WgXcQ"}}}}]),angular.module("core").filter("ofilter",[function(){return function(input,type,datefilter){var result={};for(var key in input){var offering=input[key];offering.type===type&&offering.date>=datefilter.startDate&&offering.date<=datefilter.endDate&&(result[key]=offering)}return result}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("OfferingsService",["$q",function(){function buildMockOfferings(){var arMockOfferings=[{type:"gas",price:100,image:"http://www.mikanet.com/museum/images/full-service_gas.jpg",description:"A retro fill up that won't disappoint!",shortDesc:"Retro fill up"},{type:"gas",price:150,image:"http://yesteryearremembered.com/wp-content/uploads/2012/01/man_pumping_gas.jpg#full%20service%20gas%20stations.%20330x244",description:"When ordinary retro is not enough, have our black and white attendant fill your tank with vintage gas.",shortDesc:"B & W fill up"},{type:"gas",price:450,image:"http://i.ebayimg.com/00/s/MTIwMFgxNjAw/$(KGrHqVHJF!E+(636eh1BQf4zU3fCw~~60_35.JPG",description:"Ask for the Special",shortDesc:"Special fill up"},{type:"wash",price:250,image:"http://crosscountry.smesports.org/wp-content/uploads/2011/08/poolside-Car-wash.jpg",description:"Special deep cleaning",shortDesc:"Special cleaning"},{type:"freshener",price:.25,image:"https://tvrecappersanonymous.files.wordpress.com/2010/12/tree-fresh.jpg",description:"the classic",shortDesc:"Classic freshener"},{type:"freshener",price:2,image:"http://www.p-wholesale.com/upimg/9/428a1/car-air-freshener-494.jpg",description:"Want fries with that?",shortDesc:"Burger freshener"}];mockOfferings={};for(var date=(new Date).getTime(),additionalPrice=0,i=0;50>i;i++){for(var j=0;j<arMockOfferings.length;j++){var oID="O_"+i+"_"+j,offering=$.extend({},arMockOfferings[j]);offering.date=new Date(date),offering.price+=additionalPrice,mockOfferings[oID]=offering}++additionalPrice,date+=864e5}}var mockOfferings,offerings={};return{getOfferings:function(){return offerings},updateOfferings:function(){return mockOfferings||buildMockOfferings(),offerings=$.extend(offerings,mockOfferings)}}}]),angular.module("offerings").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Offerings","offerings","dropdown","/offerings(/create)?"),Menus.addSubMenuItem("topbar","offerings","List Offerings","offerings"),Menus.addSubMenuItem("topbar","offerings","New Offering","offerings/create")}]),angular.module("offerings").config(["$stateProvider",function($stateProvider){$stateProvider.state("listOfferings",{url:"/offerings",templateUrl:"modules/offerings/views/list-offerings.client.view.html"}).state("createOffering",{url:"/offerings/create",templateUrl:"modules/offerings/views/create-offering.client.view.html"}).state("viewOffering",{url:"/offerings/:offeringId",templateUrl:"modules/offerings/views/view-offering.client.view.html"}).state("editOffering",{url:"/offerings/:offeringId/edit",templateUrl:"modules/offerings/views/edit-offering.client.view.html"})}]),angular.module("offerings").controller("OfferingsController",["$scope","$stateParams","$location","Authentication","Offerings",function($scope,$stateParams,$location,Authentication,Offerings){$scope.authentication=Authentication,$scope.create=function(){var offering=new Offerings({name:this.name});offering.$save(function(response){$location.path("offerings/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(offering){if(offering){offering.$remove();for(var i in $scope.offerings)$scope.offerings[i]===offering&&$scope.offerings.splice(i,1)}else $scope.offering.$remove(function(){$location.path("offerings")})},$scope.update=function(){var offering=$scope.offering;offering.$update(function(){$location.path("offerings/"+offering._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.offerings=Offerings.query()},$scope.findOne=function(){$scope.offering=Offerings.get({offeringId:$stateParams.offeringId})}}]),angular.module("offerings").factory("Offerings",["$resource",function($resource){return $resource("offerings/:offeringId",{offeringId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);